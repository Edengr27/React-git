{"version":3,"sources":["components/AddCategory.js","Helpers/getGifs.js","components/GifGridItem.js","components/GitGrids.js","Hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGits","category","a","url","encodeURI","fetch","resp","json","data","gits","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GitGrids","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAMC,SAlBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAG/BR,GAAgB,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACvCN,EAAc,MAWd,SACI,uBACGO,KAAK,OACLC,MAAQT,EACRU,SA1Be,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAebM,GAfa,4CAAJ,sDCEPO,EAAc,SAACH,EAAMV,GAI9B,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IAEtB,4BAAIA,QCLHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAWvB,ECZwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAE/BqB,KAAK,GACLa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KA0CA,OApCAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEC,QAAQC,IAAIF,GACZH,EAAS,CAELf,KAAKkB,EACLL,SAAS,SAU1B,CAACpB,IAgBGqB,EDhCyBO,CAAa5B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,eAAsDhB,EAAtD,OAICoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEMA,GADCA,EAAIC,aE9BtBkB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,aAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MCnB9B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.cf59aca9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            \r\n             //console.log('Submit hecho');\r\n        setCategories(  cats => [inputValue,...cats]);\r\n        setInputValue('');\r\n\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n               type=\"text\"\r\n               value={ inputValue }\r\n               onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGits =  async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category)}&limit=10&api_key=plq3atuTEzwJMIpOGJaYE0yfLSU3PaZz`\r\n    const resp = await fetch( url );\r\n    const {data} =  await resp.json();\r\n\r\n    const gits = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    \r\n    return gits;\r\n    //console.log(gits);\r\n    //setImages(gits);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (title,url) => {\r\n\r\n    //console.log(id ,title,url);\r\n\r\n    return (\r\n        <div className=\"car animate__animated animate__bounce\">\r\n            <img src={ url} alt={ title }/>\r\n\r\n            <p>{title}</p>\r\n            {/* {img.title} */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\n//import { getGits } from '../Helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GitGrids = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    // // const [count, setCount] = useState(0);\r\n    // useEffect ( () => {\r\n    //     getGits(category)\r\n    //         .then ( setImages);\r\n    // }, [category])\r\n\r\n    \r\n    const {data:images, loading} =  useFetchGifs(category);\r\n    \r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce\">  { category } </h3>\r\n\r\n        {/* {loading ? 'Cargando...' : 'Data cargando' } */}\r\n        \r\n        {loading && <p>Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n          \r\n                {\r\n                    images.map(img => ( \r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                         { ...img }\r\n                        />\r\n                        // <il key={ id }>{ title }</il>\r\n                    ))\r\n                }\r\n            \r\n\r\n            {/* <h3>{ count }</h3>\r\n            <button onClick={()=> setCount( count + 1 )}></button>*/}  \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport { getGits } from '../Helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data:[],\r\n        loading :true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGits(category)\r\n            .then(imgs => {\r\n               \r\n\r\n                    console.log(imgs);\r\n                    setState({\r\n\r\n                        data:imgs,\r\n                        loading: false \r\n\r\n\r\n                    });\r\n\r\n\r\n                \r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n        \r\n    //     setState({\r\n\r\n    //         data:[1,2,3,4,5,6,7],\r\n    //         loading :false\r\n\r\n    //     })\r\n\r\n\r\n    // },3000);\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GitGrids } from './components/GitGrids';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    //const categories = ['One Push','Samurai X','Dradon Ball'];\r\n    const [categories, setCategories] = useState(['One Push']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories(['HunterXHunter',...categories]);\r\n    //     setCategories(  cats => [...cats,'HunterXHunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n\r\n                        <GitGrids \r\n                        key= {category}\r\n                        category= { category } />\r\n\r\n                        //return <li key={category}>{category}</li>\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <GitExpertApp />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}